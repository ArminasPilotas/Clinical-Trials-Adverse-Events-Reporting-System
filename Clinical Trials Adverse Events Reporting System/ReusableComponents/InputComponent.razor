<div class="form-group row">
    <label class="col-sm-2 col-form-label">@labelName</label>
    <div class="col-sm-10">
        @GetInputModifier()
    </div>
</div>

@code {
    [Parameter]
    public string labelName { get; set; }
    [Parameter]
    public string inputName { get; set; }
    [Parameter]
    public EventCallback<string> inputNameChanged { get; set; }
    [Parameter]
    public bool readOnly { get; set; }

    private async Task OnInputNameChanged(ChangeEventArgs e)
    {
        inputName = e.Value.ToString();

        await inputNameChanged.InvokeAsync(inputName);
    }
    RenderFragment GetInputModifier()
    {
        if (readOnly)
        {
            return @<input @oninput="OnInputNameChanged" type="text" class="form-control" value="@inputName" readonly />;
        }
        return @<input @oninput="OnInputNameChanged" type="text" class="form-control" value="@inputName" />;
    }
}
