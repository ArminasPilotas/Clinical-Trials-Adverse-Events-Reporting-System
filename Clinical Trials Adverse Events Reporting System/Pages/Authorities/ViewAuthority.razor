@page "/{Country}/Authority/View/{Id}"


@if (authority is null)
{
    <p><em>Loading...</em></p>
}
else
{
<form>

    <InputComponent inputName="@authority.Country.Name" labelName="Country" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.Institution.Name" labelName="Institution" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.InstitutionType.Name" labelName="Institution Type" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.InvestigationalProductType.Name" labelName="Investigational Product Type" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.Author" labelName="Author" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.Editor" labelName="Editor" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.Created.ToString()" labelName="Created" readOnly="true"></InputComponent>

    <InputComponent inputName="@authority.Modified.ToString()" labelName="Modified" readOnly="true"></InputComponent>

    <ButtonComponent buttonText="Cancel" buttonType="danger" onButtonClick="@Cancel"></ButtonComponent>

</form>
}

@code {
    [Parameter]
    public string Country { get; set; }
    [Parameter]
    public string Id { get; set; }
    [Inject]
    AuthorityRepository authorityRepository { get; set; }
    [Inject]
    NavigationManager NavigationManager { get; set; }

    public Authority authority { get; set; }

    protected override async Task OnInitializedAsync()
    {
        authority = await Task.Run(() => authorityRepository.GetById(Convert.ToInt32(Id)));
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo($"{Country}/Authorities/Index");
    }
}
