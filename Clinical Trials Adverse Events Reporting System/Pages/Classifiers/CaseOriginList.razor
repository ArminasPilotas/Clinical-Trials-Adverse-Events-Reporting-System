@page "/Classifiers/CaseOrigin/Index"
@using Clinical_Trials_Adverse_Events_Reporting_System.Entities
@using Clinical_Trials_Adverse_Events_Reporting_System.Data

@inject IClassifierRepository<CaseOrigin> classifierRepository

<NavLink class="nav-link" href="CaseOrigin/Create">
    <span class="oi oi-plus" aria-hidden="true">Add New</span>
</NavLink>

<h3>Classifiers List</h3>
<hr />

@if (classifiers is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Author</th>
                <th scope="col">Editor</th>
                <th scope="col">Created At</th>
                <th scope="col">Modified At</th>
                <th scope="col">Modify Reason</th>
                <td scope="col"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var classifier in classifiers)
            {
                <tr>
                    <td>@classifier.Id</td>
                    <td>@classifier.Name</td>
                    <td>@classifier.Author</td>
                    <td>@classifier.Editor</td>
                    <td>@classifier.Created</td>
                    <td>@classifier.Modified</td>
                    <td>@classifier.ModifyReason</td>

                    <td>
                        <a class="nav-link" href="CaseOrigin/Edit/@classifier.Id">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                        <a class="nav-link" href="CaseOrigin/Delete/@classifier.Id">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<CaseOrigin> classifiers;

    protected override async Task OnInitializedAsync()
    {
        classifiers = await Task.Run(() => classifierRepository.GetAll());
    }

}
