@page "/{Country}/NationalRequirements/Add"

@using Clinical_Trials_Adverse_Events_Reporting_System.Entities
@using Clinical_Trials_Adverse_Events_Reporting_System.Data

<form>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Country</label>
        <div class="col-sm-10">
            <label class="form-control">@Country</label>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Reporting Type</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="reportingTypeId">
                <option selected>Choose</option>
                @if (reportingTypes != null)
                {
                    @foreach (var reportingType in reportingTypes)
                    {
                        <option value="@reportingType.Id">@reportingType.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Institution for Reporting</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="InstitutionTypeId">
                <option selected>Choose</option>
                @if (institutionTypes != null)
                {
                    @foreach (var institutionType in institutionTypes)
                    {
                        <option value="@institutionType.Id">@institutionType.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">SUSAR Type</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="susarTypeId">
                <option selected>Choose</option>
                @if (susarTypes != null)
                {
                    @foreach (var susarType in susarTypes)
                    {
                        <option value="@susarType.Id">@susarType.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Case Origins</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="caseOriginId">
                <option selected>Choose</option>
                @if (caseOrigins != null)
                {
                    @foreach (var caseOrigin in caseOrigins)
                    {
                        <option value="@caseOrigin.Id">@caseOrigin.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Investigational Product Types</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="IpId">
                <option selected>Choose</option>
                @if (investigationalProductTypes != null)
                {
                    @foreach (var investigationalProductType in investigationalProductTypes)
                    {
                        <option value="@investigationalProductType.Id">@investigationalProductType.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Type of report</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="reportTypeId">
                <option selected>Choose</option>
                @if (reportTypes != null)
                {
                    @foreach (var reportType in reportTypes)
                    {
                        <option value="@reportType.Id">@reportType.Name</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Days</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" @bind="nationalRequirement.Days" />
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Comments</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" @bind="nationalRequirement.Comments" />
        </div>
    </div>

    <div class="col-md-12 text-center">
        <button type="button" class="btn btn-primary btn-lg btn-block" @onclick="CreateNationalRequirement">Create</button>
    </div>

    <div class="col-md-12 text-center">
        <button type="button" class="btn btn-danger btn-lg btn-block" @onclick="Cancel">Cancel</button>
    </div>

</form>

@code {
    [Parameter]
    public string Country { get; set; }
    [Inject]
    NationalRequirementsRepository nationalRequirementsRepository { get; set; }
    [Inject]
    CountryRepository countryRepository { get; set; }
    [Inject]
    IClassifierRepository<ReportingType> reportingTypeRepository { get; set; }
    [Inject]
    IClassifierRepository<InstitutionType> institutionTypeRepository { get; set; }
    [Inject]
    IClassifierRepository<SusarType> susarTypeRepository { get; set; }
    [Inject]
    IClassifierRepository<CaseOrigin> caseOriginRepository { get; set; }
    [Inject]
    IClassifierRepository<InvestigationalProductType> IPTypeRepository { get; set; }
    [Inject]
    IClassifierRepository<ReportType> reportTypeRepository { get; set; }
    [Inject]
    NavigationManager NavigationManager { get; set; }

    List<ReportingType> reportingTypes;
    List<InstitutionType> institutionTypes;
    List<SusarType> susarTypes;
    List<CaseOrigin> caseOrigins;
    List<InvestigationalProductType> investigationalProductTypes;
    List<ReportType> reportTypes;

    NationalRequirement nationalRequirement = new NationalRequirement();

    public int reportingTypeId { get; set; }
    public int InstitutionTypeId { get; set; }
    public int susarTypeId { get; set; }
    public int caseOriginId { get; set; }
    public int IpId { get; set; }
    public int reportTypeId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reportingTypes = await Task.Run(() => reportingTypeRepository.GetAll());
        institutionTypes = await Task.Run(() => institutionTypeRepository.GetAll());
        susarTypes = await Task.Run(() => susarTypeRepository.GetAll());
        caseOrigins = await Task.Run(() => caseOriginRepository.GetAll());
        investigationalProductTypes = await Task.Run(() => IPTypeRepository.GetAll());
        reportTypes = await Task.Run(() => reportTypeRepository.GetAll());
    }

    protected async void CreateNationalRequirement()
    {
        nationalRequirement.Country = await countryRepository.GetByName(Country);
        nationalRequirement.ReportingType = await reportingTypeRepository.GetById(reportingTypeId);
        nationalRequirement.InstitutionType = await institutionTypeRepository.GetById(InstitutionTypeId);
        nationalRequirement.SusarType = await susarTypeRepository.GetById(susarTypeId);
        nationalRequirement.CaseOrigin = await caseOriginRepository.GetById(caseOriginId);
        nationalRequirement.InvestigationalProductType = await IPTypeRepository.GetById(IpId);
        nationalRequirement.ReportType = await reportTypeRepository.GetById(reportTypeId);
        nationalRequirement.Created = DateTime.UtcNow;
        nationalRequirement.Modified = DateTime.UtcNow;
        await nationalRequirementsRepository.Create(nationalRequirement);
        NavigationManager.NavigateTo($"{Country}/NationalRequirements/Index");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo($"{Country}/NationalRequirements/Index");
    }
}
