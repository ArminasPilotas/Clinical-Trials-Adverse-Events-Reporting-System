@page "/{Country}/Institution/View/{Id}"

@using Clinical_Trials_Adverse_Events_Reporting_System.Entities
@using Clinical_Trials_Adverse_Events_Reporting_System.Data
@using Clinical_Trials_Adverse_Events_Reporting_System.ReusableComponents

@inject InstitutionRepository institutionRepository
@inject NavigationManager NavigationManager


@if (institution is null)
{

}

else
{
<form>
    <InputComponent inputName="@institution.Name" labelName="Institution Name" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.InstitutionType.Name" labelName="Institution Type" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.Address" labelName="Address" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.Phone" labelName="Phone" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.Fax" labelName="Fax" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.Email" labelName="Email" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.AlternateAddress" labelName="Alternate Address" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.AlternatePhone" labelName="Alternate Phone" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.AlternateFax" labelName="Alternate Fax" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.AlternateEmail" labelName="Alternate Email" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.City" labelName="City" readOnly="true"></InputComponent>

    <InputComponent inputName="@institution.RegNo" labelName="Registration Number" readOnly="true"></InputComponent>

    <ButtonComponent buttonText="Cancel" buttonType="button" buttonStyle="danger" onButtonClick="Cancel"></ButtonComponent>
</form>

}


@code {
    [Parameter]
    public string Country { get; set; }
    [Parameter]
    public string Id { get; set; }

    public Institution institution { get; set; }

    protected override async Task OnInitializedAsync()
    {
        institution = await Task.Run(() => institutionRepository.GetById(Convert.ToInt32(Id)));
    }

    private void Cancel()
        {
            NavigationManager.NavigateTo($"{Country}/Institution/Index");
        }
}
