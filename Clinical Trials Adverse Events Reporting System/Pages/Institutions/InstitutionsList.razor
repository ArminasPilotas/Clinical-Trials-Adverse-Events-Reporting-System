@page "/{Country}/Institution/Index"

<NavLink class="nav-link">
    <a href="/@Country/Institution/Add">
        <span class="oi oi-plus" aria-hidden="true">Add Institution</span>
    </a>
</NavLink>

@if (institutions is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Institution Type</th>
                <th scope="col">Institution Name</th>
                <th scope="col">Author</th>
                <th scope="col">Editor</th>
                <th scope="col">Created At</th>
                <th scope="col">Modified At</th>
                <th scope="col">Modify Reason</th>
                <td scope="col"></td>
            </tr>
        </thead>

        <tbody>
            @foreach (var institution in institutionFilter)
            {
                <tr>
                    <td>@institution.Id</td>
                    <td>@institution.InstitutionType.Name</td>
                    <td>@institution.Name</td>
                    <td>@institution.Author</td>
                    <td>@institution.Editor</td>
                    <td>@institution.Created</td>
                    <td>@institution.Modified</td>
                    <td>@institution.ModifyReason</td>

                    <td>
                        <a class="nav-link" href="/@Country/Institution/View/@institution.Id">
                            <span class="oi oi-eye" aria-hidden="true">View</span>
                        </a>
                        <a class="nav-link" href="/@Country/Institution/Edit/@institution.Id">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                        <a class="nav-link" href="/@Country/Institution/Delete/@institution.Id">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <PaginationComponent CurrentPage="@CurrentPage" TotalPagesNumber="@((institutions.Count + RecordsPerPage-1)/RecordsPerPage)" PageChanged="@OnPageChanged"></PaginationComponent>
}

@code {

    [Inject]
    IInstitutionRepository institutionRepository { get; set; }

    [Parameter]
    public string Country { get; set; }

    public int RecordsPerPage { get; set; }
    public int CurrentPage { get; set; }

    List<Institution> institutions;
    List<Institution> institutionFilter;

    protected override async Task OnInitializedAsync()
    {
        institutions = await Task.Run(() => institutionRepository.GetByCountry(Country));
        CurrentPage = 1;
        RecordsPerPage = 10;
        OnPageChanged(CurrentPage);

    }

    private void OnPageChanged(int pressedPageNumber)
    {
        CurrentPage = pressedPageNumber;
        int indexFrom = (CurrentPage - 1) * RecordsPerPage;
        institutionFilter = institutions.Skip(indexFrom).Take(RecordsPerPage).ToList();
        StateHasChanged();
    }
}
