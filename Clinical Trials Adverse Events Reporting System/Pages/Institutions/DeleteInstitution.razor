@page "/{Country}/Institution/Delete/{Id}"


@inject IInstitutionRepository institutionRepository
@inject NavigationManager NavigationManager


@if (institution is null)
{
    <p><em>Loading...</em></p>
}

else
{
    <form>

        <InputComponent @bind-inputName="@institution.Name" labelName="Institution Name" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.InstitutionType.Name" labelName="Institution Type" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.Address" labelName="Address" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.Phone" labelName="Phone" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.Fax" labelName="Fax" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.Email" labelName="Email" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.AlternateAddress" labelName="Alternate Address" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.AlternatePhone" labelName="Alternate Phone" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.AlternateFax" labelName="Alternate Fax" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.AlternateEmail" labelName="Alternate Email" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.City" labelName="City" readOnly="true"></InputComponent>

        <InputComponent @bind-inputName="@institution.RegNo" labelName="Registration Number" readOnly="true"></InputComponent>

        <ButtonComponent buttonText="Delete" buttonType="button" buttonStyle="primary" onButtonClick="@(() => DeleteInstitutions())"></ButtonComponent>

        <ButtonComponent buttonText="Cancel" buttonType="button" buttonStyle="danger" onButtonClick="@Cancel"></ButtonComponent>
        
    </form>

    }


@code {
    [Parameter]
    public string Country { get; set; }
    [Parameter]
    public string Id { get; set; }

    public Institution institution { get; set; }

    protected override async Task OnInitializedAsync()
    {
        institution = await Task.Run(() => institutionRepository.GetById(Convert.ToInt32(Id)));
    }

    protected async Task DeleteInstitutions()
    {
        await institutionRepository.Delete(institution);
        NavigationManager.NavigateTo($"{Country}/Institution/Index");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo($"{Country}/Institution/Index");
    }
}
